= MidiQ

Stupid message queueing demos using MIDI to "audistrate" ("illustrate
with audio") queueing behaviors.

= Preparation

== Client

 sudo gem install midiator
 sudo gem install beanstalk-client

== Server

 sudo port install beanstalkd


= Running

* Start the beanstalk server: beanstalkd
* Have clients connect to it: ruby work_queue_client.rb <server_ip_address>
* Send note messages to the clients!
** ruby work_queue_server.rb <server_ip_address> 1    # send a single note
** ruby work_queue_server.rb <server_ip_address> 100  # send 100 notes
** ruby drum_server.rb # ten notes per second--you can hear the net lag
** ruby mary_server.rb # plays a song

== Messages

 Q                  # tell client to quit 
 S 39 1.0 10 127    # sync <note> <duration> <channel> <volume>
 M 60 1.0 1 127     # async <note> <duration> <channel> <volume>

== Notes and Hacking

* If you have a single listener, you can get chords going by sending M
  notes. Otherwise S notes are probably plenty.
* Mary and Drum have sleeps in them to force the output to be played
  synchronously; otherwise the work queue will handle them as fast as
  it can.
* Over wireless, there ends up being a delay of up to a tenth of a
  second. This means it's basically crap for music, but YMMV and it's
  still kind of a cool demo anyway.
